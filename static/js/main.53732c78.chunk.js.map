{"version":3,"sources":["doubleClick.js","index.js"],"names":["useDoubleClick","callback","React","elem","setElem","countRef","timerRef","inputCallbackRef","callbackRef","node","current","handler","isDoubleClick","timerIsPresent","clearTimeout","timer","setTimeout","addEventListener","removeEventListener","DoubleClickBtn","props","UseDoubleClick","clickHandler","refCallback","className","ref","value","Stopwatch","state","time","isOn","start","this","setState","Date","now","setInterval","clearInterval","resetTimer","startTimer","startBtnClasses","onClick","wait","stopTimer","reset","restartTimer","ms","colonNotation","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAmDeA,MAjDf,SAAwBC,GAAW,IAAD,EACRC,WAAe,MADP,mBACzBC,EADyB,KACnBC,EADmB,KAE1BC,EAAWH,SAAa,GACxBI,EAAWJ,SAAa,MACxBK,EAAmBL,SAAa,MAChCM,EAAcN,eAAkB,SAAAO,GACpCL,EAAQK,GACRD,EAAYE,QAAUD,IACrB,IAsCH,OApCAP,aAAgB,WACdK,EAAiBG,QAAUT,KAG7BC,aAAgB,WACd,SAASS,IACP,IAAMC,EAAgBP,EAASK,QAAU,IAAM,EACzCG,EAAiBP,EAASI,QAShC,GARIG,GAAkBD,IACpBE,aAAaR,EAASI,SACtBJ,EAASI,QAAU,KACnBL,EAASK,QAAU,EACfH,EAAiBG,SACnBH,EAAiBG,YAGhBG,EAAgB,CACnBR,EAASK,QAAUL,EAASK,QAAU,EACtC,IAAMK,EAAQC,YAAW,WACvBF,aAAaR,EAASI,SACtBJ,EAASI,QAAU,KACnBL,EAASK,QAAU,IAClB,KACHJ,EAASI,QAAUK,GAOvB,OAJIZ,GACFA,EAAKc,iBAAiB,QAASN,GAG1B,WACDR,GACFA,EAAKe,oBAAoB,QAASP,MAGrC,CAACR,IACG,CAACK,EAAaL,I,eC1CvB,SAASgB,EAAeC,GAAQ,IAAD,EACPC,EAAeD,EAAME,cAApCC,EADsB,oBAE7B,OACE,yBAAQC,UAAWJ,EAAMI,UAAWC,IAAKF,EAAzC,UACGH,EAAMM,MACP,qBAAKF,UAAU,UAAf,6B,IAKAG,E,kDACJ,WAAYP,GAAO,IAAD,8BAChB,cAAMA,IACDQ,MAAQ,CACXC,KAAM,EACNC,MAAM,EACNC,MAAO,GALO,E,8CAUlB,WAAc,IAAD,OACXC,KAAKC,SAAS,CACZH,MAAM,EACNC,MAAOG,KAAKC,MAAQH,KAAKJ,MAAMC,OAGjCG,KAAKjB,MAAQqB,aAAY,kBAAM,EAAKH,SAAS,CAC3CJ,KAAMK,KAAKC,MAAQ,EAAKP,MAAMG,UAC5B,K,uBAIN,WACMC,KAAKJ,MAAME,OACbE,KAAKC,SAAS,CAACH,MAAM,IACrBO,cAAcL,KAAKjB,U,wBAKvB,WACEiB,KAAKC,SAAS,CAACJ,KAAM,EAAGC,MAAM,IAC9BO,cAAcL,KAAKjB,S,0BAIrB,WAAgB,IAAD,OACbiB,KAAKM,aACLtB,YAAW,kBAAM,EAAKuB,eAAc,K,oBAKtC,WAAU,IACJR,EADG,OAEDS,EAAkB,iBAGtBT,EADsB,IAApBC,KAAKJ,MAAMC,KACL,wBAAQL,UAAWgB,EAAiBC,QAAS,kBAAM,EAAKF,cAAxD,mBACqB,IAApBP,KAAKJ,MAAMC,MAAeG,KAAKJ,MAAME,KAGtC,wBAAQN,UAAWgB,EAAiBC,QAAS,kBAAM,EAAKH,cAAxD,kBAFA,wBAAQd,UAAWgB,EAAiBC,QAAS,kBAAM,EAAKF,cAAxD,mBAKV,IAAMG,EAAO,cAACvB,EAAD,CAAgBG,aAAc,kBAAM,EAAKqB,aAAanB,UAAU,kBAAkBE,MAAM,SAE/FkB,EAAQ,wBAAQpB,UAAU,iBAAiBiB,QAAS,kBAAM,EAAKI,gBAAvD,qBAGd,OACE,qBAAKrB,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,sBAAd,uBAGA,qBAAKA,UAAU,kBAAf,SACGsB,IAAGd,KAAKJ,MAAMC,KAAM,CAACkB,eAAe,MAEvC,sBAAKvB,UAAU,kBAAf,UACGO,EACAW,EACAE,c,GAzEW1C,IAAM8C,WAkF9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.53732c78.chunk.js","sourcesContent":["import * as React from \"react\";\n\nfunction useDoubleClick(callback) {\n  const [elem, setElem] = React.useState(null);\n  const countRef = React.useRef(0);\n  const timerRef = React.useRef(null);\n  const inputCallbackRef = React.useRef(null);\n  const callbackRef = React.useCallback(node => {\n    setElem(node);\n    callbackRef.current = node;\n  }, []);\n\n  React.useEffect(() => {\n    inputCallbackRef.current = callback;\n  });\n\n  React.useEffect(() => {\n    function handler() {\n      const isDoubleClick = countRef.current + 1 === 2;\n      const timerIsPresent = timerRef.current;\n      if (timerIsPresent && isDoubleClick) {\n        clearTimeout(timerRef.current);\n        timerRef.current = null;\n        countRef.current = 0;\n        if (inputCallbackRef.current) {\n          inputCallbackRef.current();\n        }\n      }\n      if (!timerIsPresent) {\n        countRef.current = countRef.current + 1;\n        const timer = setTimeout(() => {\n          clearTimeout(timerRef.current);\n          timerRef.current = null;\n          countRef.current = 0;\n        }, 300);\n        timerRef.current = timer;\n      }\n    }\n    if (elem) {\n      elem.addEventListener(\"click\", handler);\n    }\n\n    return () => {\n      if (elem) {\n        elem.removeEventListener(\"click\", handler);\n      }\n    };\n  }, [elem]);\n  return [callbackRef, elem];\n}\n\nexport default useDoubleClick;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ms from 'pretty-ms';\nimport UseDoubleClick from './doubleClick';\nimport './index.scss';\n\nfunction DoubleClickBtn(props) {\n  const [refCallback] = UseDoubleClick(props.clickHandler);\n  return (\n    <button className={props.className} ref={refCallback}>\n      {props.value}\n      <div className='subline'>double click</div>\n    </button>\n  );\n}\n\nclass Stopwatch extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      time: 0,\n      isOn: false,\n      start: 0\n    }\n  }\n\n\n  startTimer() {\n    this.setState({\n      isOn: true,\n      start: Date.now() - this.state.time\n    })\n\n    this.timer = setInterval(() => this.setState({\n      time: Date.now() - this.state.start\n    }), 1);\n  }\n\n\n  stopTimer() {\n    if (this.state.isOn) {\n      this.setState({isOn: false});\n      clearInterval(this.timer);\n    }\n  }\n\n\n  resetTimer() {\n    this.setState({time: 0, isOn: false});\n    clearInterval(this.timer);\n  }\n\n\n  restartTimer() {\n    this.resetTimer();\n    setTimeout(() => this.startTimer(), 0);\n  }\n\n\n\n  render() {\n    let start;\n    const startBtnClasses = 'btn btn--green';\n\n    if (this.state.time === 0) {\n      start = <button className={startBtnClasses} onClick={() => this.startTimer()}>Start</button>;\n    } else if (this.state.time !== 0 && !this.state.isOn) {\n      start = <button className={startBtnClasses} onClick={() => this.startTimer()}>Start</button>;\n    } else {\n      start = <button className={startBtnClasses} onClick={() => this.resetTimer()}>Stop</button>;\n    }\n\n    const wait = <DoubleClickBtn clickHandler={() => this.stopTimer()} className='btn btn--yellow' value='Wait' />\n\n    const reset = <button className='btn btn--white' onClick={() => this.restartTimer()}>Restart</button>;\n\n\n    return(\n      <div className='container'>\n        <div className='stopwatch'>\n          <h1 className='stopwatch__headline'>\n            Stopwatch\n          </h1>\n          <div className='stopwatch__time'>\n            {ms(this.state.time, {colonNotation: true})}\n          </div>\n          <div className='stopwatch__btns'>\n            {start}\n            {wait}\n            {reset}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nReactDOM.render(\n  <Stopwatch />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}