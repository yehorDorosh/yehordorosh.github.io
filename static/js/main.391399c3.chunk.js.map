{"version":3,"sources":["doubleClick.js","index.js"],"names":["useDoubleClick","callback","React","elem","setElem","countRef","timerRef","inputCallbackRef","callbackRef","node","current","handler","isDoubleClick","timerIsPresent","clearTimeout","timer","setTimeout","addEventListener","removeEventListener","DoubleClickBtn","props","UseDoubleClick","clickHandler","refCallback","className","ref","value","SwitchButton","stateDisabled","statePaused","classNameOn","onClick","switchOn","valueOn","classNameOff","switchOff","valueOff","TouchButton","Stopwatch","state","time","isOn","start","this","setState","Date","now","setInterval","clearInterval","resetTimer","startTimer","ms","colonNotation","stopTimer","restartTimer","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.391399c3.chunk.js","sourcesContent":["import * as React from \"react\";\n\nfunction useDoubleClick(callback) {\n  const [elem, setElem] = React.useState(null);\n  const countRef = React.useRef(0);\n  const timerRef = React.useRef(null);\n  const inputCallbackRef = React.useRef(null);\n  const callbackRef = React.useCallback(node => {\n    setElem(node);\n    callbackRef.current = node;\n  }, []);\n\n  React.useEffect(() => {\n    inputCallbackRef.current = callback;\n  });\n\n  React.useEffect(() => {\n    function handler() {\n      const isDoubleClick = countRef.current + 1 === 2;\n      const timerIsPresent = timerRef.current;\n      if (timerIsPresent && isDoubleClick) {\n        clearTimeout(timerRef.current);\n        timerRef.current = null;\n        countRef.current = 0;\n        if (inputCallbackRef.current) {\n          inputCallbackRef.current();\n        }\n      }\n      if (!timerIsPresent) {\n        countRef.current = countRef.current + 1;\n        const timer = setTimeout(() => {\n          clearTimeout(timerRef.current);\n          timerRef.current = null;\n          countRef.current = 0;\n        }, 300);\n        timerRef.current = timer;\n      }\n    }\n    if (elem) {\n      elem.addEventListener(\"click\", handler);\n    }\n\n    return () => {\n      if (elem) {\n        elem.removeEventListener(\"click\", handler);\n      }\n    };\n  }, [elem]);\n  return [callbackRef, elem];\n}\n\nexport default useDoubleClick;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ms from 'pretty-ms';\nimport UseDoubleClick from './doubleClick';\nimport './index.scss';\n\nfunction DoubleClickBtn(props) {\n  const [refCallback] = UseDoubleClick(props.clickHandler);\n  return (\n    <button className={props.className} ref={refCallback}>\n      {props.value}\n      <div className='subline'>double click</div>\n    </button>\n  );\n}\n\nfunction SwitchButton(props) {\n  if (props.stateDisabled) {\n    return <button className={props.classNameOn} onClick={props.switchOn}>{props.valueOn}</button>;\n  } else if (props.statePaused) {\n    return <button className={props.classNameOn} onClick={props.switchOn}>{props.valueOn}</button>;\n  } else {\n    return <button className={props.classNameOff} onClick={props.switchOff}>{props.valueOff}</button>;\n  }\n}\n\nfunction TouchButton(props) {\n  return (\n    <button className={props.className} onClick={props.onClick}>{props.value}</button>\n  );\n}\n\nclass Stopwatch extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      time: 0,\n      isOn: false,\n      start: 0\n    }\n  }\n\n  startTimer() {\n    this.setState({\n      isOn: true,\n      start: Date.now() - this.state.time\n    })\n\n    this.timer = setInterval(() => this.setState({\n      time: Date.now() - this.state.start\n    }), 1);\n  }\n\n  stopTimer() {\n    if (this.state.isOn) {\n      this.setState({isOn: false});\n      clearInterval(this.timer);\n    }\n  }\n\n  resetTimer() {\n    this.setState({time: 0, isOn: false});\n    clearInterval(this.timer);\n  }\n\n  restartTimer() {\n    this.resetTimer();\n    setTimeout(() => this.startTimer(), 0);\n  }\n\n\n  render() {\n    return(\n      <div className='container'>\n        <div className='stopwatch'>\n          <h1 className='stopwatch__headline'>\n            Stopwatch\n          </h1>\n          <div className='stopwatch__time'>\n            {ms(this.state.time, {colonNotation: true})}\n          </div>\n          <div className='stopwatch__btns'>\n            <SwitchButton\n              stateDisabled = {this.state.time === 0}\n              statePaused = {this.state.time !== 0 && !this.state.isOn}\n              classNameOn = 'btn btn--green'\n              classNameOff = 'btn btn--red'\n              switchOn = {() => this.startTimer()}\n              switchOff = {() => this.resetTimer()}\n              valueOn = 'Start'\n              valueOff = 'Stop'\n            />\n             <DoubleClickBtn \n              clickHandler={() => this.stopTimer()} \n              className='btn btn--yellow' \n              value='Wait'\n            />\n            <TouchButton\n              className='btn btn--white'\n              onClick={() => this.restartTimer()}\n              value='Restart'\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nReactDOM.render(\n  <Stopwatch />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}